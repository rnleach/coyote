# NMake Makefile for use on Windows
#
# Type set DEBUG=1 in terminal to enable debug builds. Make sure to run nmake clean_test when done.
# Type Remove-Item Env:\DEBUG to remove the environment variable and go back to regular builds.
#
# run with
# > nmake /f nmakefile test
#

CFLAGS = /std:c11 /TC /utf-8 /nologo
LDFLAGS = /NOLOGO

!IF "$(DEBUG)" == "1"

CFLAGS = $(CFLAGS) /Od /Zi /RTCcsu
LDFLAGS = $(LDFLAGS) /DEBUG

!ELSE

CFLAGS = $(CFLAGS) /O2 /DNDEBUG /arch:AVX2 /openmp:experimental /Qvec-report:1

!ENDIF

TEST_OBJS = tests\test.obj                 \
            tests\time.obj                 \
            tests\fileio.obj               \
            tests\file_name_iterator.obj   \
            tests\memory.obj               \
			tests/terminal.obj

all: build test.exe test

build\build.exe: build\build.c src\coyote.h src\coyote_win32.h
	@$(CC) $(CFLAGS)  /Febuild\build.exe build\build.c /link $(LDFLAGS) /STACK:4194304

build: build\build.exe
	@echo -------------------------------------------------------------------------------------------
	@cd build
	@build.exe
	@cd ..

build\coyote.h: build

$(TEST_OBJS): tests\test.h build\coyote.h
{tests}.c{tests}.obj:
	@$(CC) $(CFLAGS) /c /Fo$*.obj $*.c 

test.exe: $(TEST_OBJS)
	@LINK $(LDFLAGS) $**

test: test.exe
	@echo -------------------------------------------------------------------------------------------
	@$**

clean:
	@echo -------------------------------------------------------------------------------------------
	@del tests\*.obj *.pdb *.exe *.obj *.ilk tmp_output\*.txt build\*.exe build\*.pdb build\*.ilk build\coyote.h

